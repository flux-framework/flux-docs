
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/example_job_submit_wait.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_example_job_submit_wait.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_example_job_submit_wait.py:


Introductory example - Job Submit and Wait
==========================================

To programatically create and check the status for a group
of jobs using the flux.job.FluxExecutor.

.. GENERATED FROM PYTHON SOURCE LINES 9-17

.. code-block:: default



    import os
    import concurrent.futures
    from flux.job import JobspecV1
    from flux.job import JobspecV1, FluxExecutor









.. GENERATED FROM PYTHON SOURCE LINES 18-23

Instead of directly creating a flux handle by importing flux and doing flux.Flux(),
this time we are going to use the flux.job.FluxExecutor. This will allow us to submit
jobs and then asynchronously wait for them to finish. As we did before, let's start
with a jobspec for a sleep job. We are fairly certain this will run with a return
code of 0 to indicate success.

.. GENERATED FROM PYTHON SOURCE LINES 23-28

.. code-block:: default


    jobspec = JobspecV1.from_command(
        command=["sleep", "1"], num_tasks=2, num_nodes=1, cores_per_task=1
    )








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Let's again set the working directory and current environment.

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: default

    jobspec.cwd = os.getcwd()
    jobspec.environment = dict(os.environ)








.. GENERATED FROM PYTHON SOURCE LINES 34-36

To mix things up a bit, let's run a command that we know will fail. The false
command always returns a value of 1. This is a "bad" jobspec that will fail!

.. GENERATED FROM PYTHON SOURCE LINES 36-38

.. code-block:: default

    bad_jobspec = JobspecV1.from_command(["/bin/false"])








.. GENERATED FROM PYTHON SOURCE LINES 39-42

Now we will demonstrate using the FluxExecutor (via a context) to submit both good
and bad jobs, and wait for them to finish. We call a job that is marked as completed
a "future" and can inspect error code and exceptions to see details about the results!

.. GENERATED FROM PYTHON SOURCE LINES 42-72

.. code-block:: default


    # create an executor to submit jobs
    with FluxExecutor() as executor:

        # we will capture and keep each job future
        futures = []

        # submit half successful jobs
        for _ in range(5):
            futures.append(executor.submit(jobspec))
            print(f"submit: {id(futures[-1])} (good) jobspec")

        # and half failure jobs!
        for _ in range(5):
            futures.append(executor.submit(bad_jobspec))
            print(f"submit: {id(futures[-1])} (bad) jobspec")

        # We can now check on our job futures
        for future in concurrent.futures.as_completed(futures):

            # There was an exception!
            if future.exception() is not None:
                print(f"‚ö†Ô∏è wait: {id(future)} Error: job raised error {future.exception()}")

            # Successful result, return code is zero
            elif future.result() == 0:
                print(f"üèÜÔ∏è wait: {id(future)} Success")

            # Some other result
            else:
                print(f"‚ùåÔ∏è wait: {id(future)} Error: job returned exit code {future.result()}")



.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    submit: 140663441081680 (good) jobspec
    submit: 140663441084272 (good) jobspec
    submit: 140663441133824 (good) jobspec
    submit: 140663441134112 (good) jobspec
    submit: 140663441134400 (good) jobspec
    submit: 140663441081584 (bad) jobspec
    submit: 140663441135072 (bad) jobspec
    submit: 140663441135408 (bad) jobspec
    submit: 140663441135744 (bad) jobspec
    submit: 140663441136080 (bad) jobspec
    üèÜÔ∏è wait: 140663441081680 Success
    üèÜÔ∏è wait: 140663441084272 Success
    üèÜÔ∏è wait: 140663441133824 Success
    üèÜÔ∏è wait: 140663441134112 Success
    ‚ùåÔ∏è wait: 140663441081584 Error: job returned exit code 1
    ‚ùåÔ∏è wait: 140663441135072 Error: job returned exit code 1
    ‚ùåÔ∏è wait: 140663441135408 Error: job returned exit code 1
    ‚ùåÔ∏è wait: 140663441135744 Error: job returned exit code 1
    ‚ùåÔ∏è wait: 140663441136080 Error: job returned exit code 1
    üèÜÔ∏è wait: 140663441134400 Success





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.621 seconds)


.. _sphx_glr_download_auto_examples_example_job_submit_wait.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: example_job_submit_wait.py <example_job_submit_wait.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: example_job_submit_wait.ipynb <example_job_submit_wait.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
